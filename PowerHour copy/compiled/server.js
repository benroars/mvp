'use strict';

// Babel ES6/JSX Compiler
require('babel-register');

var swig = require('swig');
var React = require('react');
var ReactDOM = require('react-dom/server');
var Router = require('react-router');
var routes = require('./app/routes');

var express = require('express');
var path = require('path');
var logger = require('morgan');
var bodyParser = require('body-parser');

var app = express();

app.set('port', process.env.PORT || 3000);
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static(path.join(__dirname, 'public')));

app.use(function (req, res) {
  Router.match({ routes: routes.default, location: req.url }, function (err, redirectLocation, renderProps) {
    if (err) {
      res.status(500).send(err.message);
    } else if (redirectLocation) {
      res.status(302).redirect(redirectLocation.pathname + redirectLocation.search);
    } else if (renderProps) {
      var html = ReactDOM.renderToString(React.createElement(Router.RoutingContext, renderProps));
      var page = swig.renderFile('views/index.html', { html: html });
      res.status(200).send(page);
    } else {
      res.status(404).send('Page Not Found');
    }
  });
});

app.listen(app.get('port'), function () {
  console.log('Express server listening on port ' + app.get('port'));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxRQUFRLGdCQUFSOztBQUVBLElBQUksT0FBUSxRQUFRLE1BQVIsQ0FBWjtBQUNBLElBQUksUUFBUSxRQUFRLE9BQVIsQ0FBWjtBQUNBLElBQUksV0FBVyxRQUFRLGtCQUFSLENBQWY7QUFDQSxJQUFJLFNBQVMsUUFBUSxjQUFSLENBQWI7QUFDQSxJQUFJLFNBQVMsUUFBUSxjQUFSLENBQWI7O0FBRUEsSUFBSSxVQUFVLFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSSxPQUFPLFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSSxTQUFTLFFBQVEsUUFBUixDQUFiO0FBQ0EsSUFBSSxhQUFhLFFBQVEsYUFBUixDQUFqQjs7QUFHQSxJQUFJLE1BQU0sU0FBVjs7QUFFQSxJQUFJLEdBQUosQ0FBUSxNQUFSLEVBQWdCLFFBQVEsR0FBUixDQUFZLElBQVosSUFBb0IsSUFBcEM7QUFDQSxJQUFJLEdBQUosQ0FBUSxPQUFPLEtBQVAsQ0FBUjtBQUNBLElBQUksR0FBSixDQUFRLFdBQVcsSUFBWCxFQUFSO0FBQ0EsSUFBSSxHQUFKLENBQVEsV0FBVyxVQUFYLENBQXNCLEVBQUUsVUFBVSxLQUFaLEVBQXRCLENBQVI7QUFDQSxJQUFJLEdBQUosQ0FBUSxRQUFRLE1BQVIsQ0FBZSxLQUFLLElBQUwsQ0FBVSxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjs7QUFFQSxJQUFJLEdBQUosQ0FBUSxVQUFTLEdBQVQsRUFBYyxHQUFkLEVBQW1CO0FBQ3pCLFNBQU8sS0FBUCxDQUFhLEVBQUUsUUFBUSxPQUFPLE9BQWpCLEVBQTBCLFVBQVUsSUFBSSxHQUF4QyxFQUFiLEVBQTRELFVBQVMsR0FBVCxFQUFjLGdCQUFkLEVBQWdDLFdBQWhDLEVBQTZDO0FBQ3ZHLFFBQUksR0FBSixFQUFTO0FBQ1AsVUFBSSxNQUFKLENBQVcsR0FBWCxFQUFnQixJQUFoQixDQUFxQixJQUFJLE9BQXpCO0FBQ0QsS0FGRCxNQUVPLElBQUksZ0JBQUosRUFBc0I7QUFDM0IsVUFBSSxNQUFKLENBQVcsR0FBWCxFQUFnQixRQUFoQixDQUF5QixpQkFBaUIsUUFBakIsR0FBNEIsaUJBQWlCLE1BQXRFO0FBQ0QsS0FGTSxNQUVBLElBQUksV0FBSixFQUFpQjtBQUN0QixVQUFJLE9BQU8sU0FBUyxjQUFULENBQXdCLE1BQU0sYUFBTixDQUFvQixPQUFPLGNBQTNCLEVBQTJDLFdBQTNDLENBQXhCLENBQVg7QUFDQSxVQUFJLE9BQU8sS0FBSyxVQUFMLENBQWdCLGtCQUFoQixFQUFvQyxFQUFFLE1BQU0sSUFBUixFQUFwQyxDQUFYO0FBQ0EsVUFBSSxNQUFKLENBQVcsR0FBWCxFQUFnQixJQUFoQixDQUFxQixJQUFyQjtBQUNELEtBSk0sTUFJQTtBQUNMLFVBQUksTUFBSixDQUFXLEdBQVgsRUFBZ0IsSUFBaEIsQ0FBcUIsZ0JBQXJCO0FBQ0Q7QUFDRixHQVpEO0FBYUQsQ0FkRDs7QUFvQkEsSUFBSSxNQUFKLENBQVcsSUFBSSxHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLFlBQVc7QUFDckMsVUFBUSxHQUFSLENBQVksc0NBQXNDLElBQUksR0FBSixDQUFRLE1BQVIsQ0FBbEQ7QUFDRCxDQUZEIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEJhYmVsIEVTNi9KU1ggQ29tcGlsZXJcbnJlcXVpcmUoJ2JhYmVsLXJlZ2lzdGVyJyk7XG5cbnZhciBzd2lnICA9IHJlcXVpcmUoJ3N3aWcnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUmVhY3RET00gPSByZXF1aXJlKCdyZWFjdC1kb20vc2VydmVyJyk7XG52YXIgUm91dGVyID0gcmVxdWlyZSgncmVhY3Qtcm91dGVyJyk7XG52YXIgcm91dGVzID0gcmVxdWlyZSgnLi9hcHAvcm91dGVzJyk7XG5cbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5cblxudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xuXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gIFJvdXRlci5tYXRjaCh7IHJvdXRlczogcm91dGVzLmRlZmF1bHQsIGxvY2F0aW9uOiByZXEudXJsIH0sIGZ1bmN0aW9uKGVyciwgcmVkaXJlY3RMb2NhdGlvbiwgcmVuZGVyUHJvcHMpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIubWVzc2FnZSlcbiAgICB9IGVsc2UgaWYgKHJlZGlyZWN0TG9jYXRpb24pIHtcbiAgICAgIHJlcy5zdGF0dXMoMzAyKS5yZWRpcmVjdChyZWRpcmVjdExvY2F0aW9uLnBhdGhuYW1lICsgcmVkaXJlY3RMb2NhdGlvbi5zZWFyY2gpXG4gICAgfSBlbHNlIGlmIChyZW5kZXJQcm9wcykge1xuICAgICAgdmFyIGh0bWwgPSBSZWFjdERPTS5yZW5kZXJUb1N0cmluZyhSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlci5Sb3V0aW5nQ29udGV4dCwgcmVuZGVyUHJvcHMpKTtcbiAgICAgIHZhciBwYWdlID0gc3dpZy5yZW5kZXJGaWxlKCd2aWV3cy9pbmRleC5odG1sJywgeyBodG1sOiBodG1sIH0pO1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQocGFnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKCdQYWdlIE5vdCBGb3VuZCcpXG4gICAgfVxuICB9KTtcbn0pO1xuXG5cblxuXG5cbmFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coJ0V4cHJlc3Mgc2VydmVyIGxpc3RlbmluZyBvbiBwb3J0ICcgKyBhcHAuZ2V0KCdwb3J0JykpO1xufSk7XG4iXX0=